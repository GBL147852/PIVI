#version 330 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 position_i;
layout(location = 1) in vec2 uv_i;
layout(location = 2) in vec3 normal_i;

// Output data ; will be interpolated for each fragment.
out vec2 uv_o;
out vec3 normal_o;

// Values that stay constant for the whole mesh.
uniform mat4 mvp;
uniform mat4 mv;

void main() {
	gl_Position = mvp * vec4(position_i,1);
	uv_o = uv_i;
	normal_o = normalize((mv * vec4(normal_i,0)).xyz);
}
